"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[264],{65658:e=>{e.exports=JSON.parse('{"functions":[{"name":"Init","desc":"This function initializes [Permissions] and the preset user permissions & groups.\\n\\n:::danger\\n\\n>Failure to call this function before using other functions will result in [Permissions] being broken.\\n\\n:::","params":[{"name":"permissionsConfig","desc":"The config used for setting up and storing the preset permissions & groups","lua_type":"Config?"}],"returns":[{"desc":"","lua_type":"Permissions\\r\\n"}],"function_type":"static","source":{"line":212,"path":"lib/init.lua"}},{"name":"FindGroup","desc":"This function is used to find a [Group] object by it\'s name.","params":[{"name":"name","desc":"The name of the group to query.","lua_type":"string"}],"returns":[{"desc":"The group that was found or nil if no group was found.","lua_type":"Group?"}],"function_type":"static","source":{"line":246,"path":"lib/init.lua"}},{"name":"FindHighestGroupPrecedence","desc":"This method is for querying the user groups for the highest\\nprecedence returning that group.","params":[{"name":"plr","desc":"","lua_type":"Player"}],"returns":[{"desc":"","lua_type":"Group?\\r\\n"}],"function_type":"static","source":{"line":256,"path":"lib/init.lua"}},{"name":"IsUserInGroup","desc":"This method is for checking if a user is in a specific group returning true if they are otherwise false","params":[{"name":"plr","desc":"","lua_type":"Player"},{"name":"group","desc":"","lua_type":"Group"}],"returns":[{"desc":"","lua_type":"boolean\\r\\n"}],"function_type":"static","source":{"line":278,"path":"lib/init.lua"}},{"name":"SetUserGroup","desc":"This function is used to set a group to a user.","params":[{"name":"plr","desc":"","lua_type":"Player"},{"name":"group","desc":"","lua_type":"Group"}],"returns":[],"function_type":"static","source":{"line":289,"path":"lib/init.lua"}},{"name":"RemoveUserGroup","desc":"This function is used to remove a group from a user.","params":[{"name":"plr","desc":"","lua_type":"Player"},{"name":"group","desc":"","lua_type":"Group"}],"returns":[],"function_type":"static","source":{"line":305,"path":"lib/init.lua"}},{"name":"GrantPermission","desc":"This functions grants a user a permission node.\\n\\n:::note\\n\\nIf you grant a user a permission node and that user had a negated permission node it will revoke the negated permission.\\n\\n:::","params":[{"name":"plr","desc":"","lua_type":"Player"},{"name":"permission","desc":"","lua_type":"string"}],"returns":[],"function_type":"static","source":{"line":329,"path":"lib/init.lua"}},{"name":"RevokePermission","desc":"This functions revokes a user from a permission node.","params":[{"name":"plr","desc":"","lua_type":"Player"},{"name":"permission","desc":"","lua_type":"string"}],"returns":[],"function_type":"static","source":{"line":346,"path":"lib/init.lua"}},{"name":"HasPermission","desc":"This function checks if a user has a specific permission node.\\nNegated permission nodes take priority, and when present in\\nthe user\'s permissions, this function will return false.","params":[{"name":"plr","desc":"","lua_type":"Player"},{"name":"permission","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"static","source":{"line":364,"path":"lib/init.lua"}}],"properties":[{"name":"Group","desc":"This property stores a reference to the [Group] class.","lua_type":"Schema_Group","tags":["reference"],"source":{"line":134,"path":"lib/init.lua"}},{"name":"_UserPermissions","desc":"This internal property contains the individual user permissions.","lua_type":"Map<Player,{string}>","private":true,"source":{"line":143,"path":"lib/init.lua"}},{"name":"_UserGroups","desc":"This internal property contains the individual user groups.","lua_type":"Map<Player,{Group}>","private":true,"source":{"line":152,"path":"lib/init.lua"}},{"name":"_Groups","desc":"This internal property stores a Dictionary of [Group] names & objects that [Permissions] is aware of.","lua_type":"Dictionary<Group>","private":true,"source":{"line":161,"path":"lib/init.lua"}}],"types":[],"name":"Permissions","desc":"This class was designed to track permissions for a user or a group for granting access to certain commands and features inside your game.\\n\\n# Definitions\\n- \\"&lt;example&gt;\\": Any text within `< >` is a mandatory placeholder.\\n- \\"&lt;?: example &gt;\\": Any text within `<?: >` is a optional placeholder and is not required to be used.\\n- \\"permission node\\": This is a string which contains a `<category>.<permission>.<?: subperm>` format.\\n\\n:::note\\n\\n>The Permissions module is recommended to be placed in [ServerScriptService].\\n\\n:::","source":{"line":123,"path":"lib/init.lua"}}')}}]);