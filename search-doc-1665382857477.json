[{"title":"Config","type":0,"sectionRef":"#","url":"api/Config","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Config","url":"api/Config#types","content":" "},{"title":"UserPresetData​","type":1,"pageTitle":"Config","url":"api/Config#UserPresetData","content":"&lt;/&gt; interface UserPresetData { Permissions: {string}-- A array of permission nodes Groups: {string}-- An array of group names to be assigned to the user } The UserPresetData which will contain permission nodes and groups to be assigned to the user. "},{"title":"Properties​","type":1,"pageTitle":"Config","url":"api/Config#properties","content":" "},{"title":"Groups​","type":1,"pageTitle":"Config","url":"api/Config#Groups","content":"&lt;/&gt; Config.Groups: {Group} Place Group objects in this table to allow group assigning to users.  "},{"title":"Users​","type":1,"pageTitle":"Config","url":"api/Config#Users","content":"&lt;/&gt; Config.Users: Dictionary&lt;UserPresetData&gt; A dictionary that contains Player.UserId in string format as the key and UserPresetData as it's value.  "},{"title":"DefaultGroup​","type":1,"pageTitle":"Config","url":"api/Config#DefaultGroup","content":"&lt;/&gt; Config.DefaultGroup: Group The default group that will be assigned automatically to joining users. "},{"title":"Group","type":0,"sectionRef":"#","url":"api/Group","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Group","url":"api/Group#properties","content":" "},{"title":"Name​","type":1,"pageTitle":"Group","url":"api/Group#Name","content":"&lt;/&gt; Group.Name: string The name of the group. "},{"title":"Functions​","type":1,"pageTitle":"Group","url":"api/Group#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Group","url":"api/Group#new","content":"&lt;/&gt; Group.new( name: string,-- The name that will be for this group permissions: {string}?,-- A table of permission nodes or nil inheritant: Group?-- The group that will be inherited with it's permission nodes ) → Group Creates a new Group object.  "},{"title":"HasPermission​","type":1,"pageTitle":"Group","url":"api/Group#HasPermission","content":"&lt;/&gt; Group.HasPermission( self: Group, permission: string-- The permission node that will be queried ) → boolean This method queries if a permission node is in this group.  "},{"title":"GrantPermission​","type":1,"pageTitle":"Group","url":"api/Group#GrantPermission","content":"&lt;/&gt; Group.GrantPermission( self: Group, permission: string-- The permission node that will be granted to this group ) → () This function grants a permission node to the group in which this function is called.  "},{"title":"RevokePermission​","type":1,"pageTitle":"Group","url":"api/Group#RevokePermission","content":"&lt;/&gt; Group.RevokePermission( self: Group, permission: string-- The permission node that will be granted to this group ) → () This function revokes a permission node in the group that this function was called. "},{"title":"Permissions","type":0,"sectionRef":"#","url":"api/Permissions","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Permissions","url":"api/Permissions#properties","content":" "},{"title":"Group​","type":1,"pageTitle":"Permissions","url":"api/Permissions#Group","content":"&lt;/&gt; Permissions.Group: Schema_Group This property contains the Group class "},{"title":"Functions​","type":1,"pageTitle":"Permissions","url":"api/Permissions#functions","content":" "},{"title":"Init​","type":1,"pageTitle":"Permissions","url":"api/Permissions#Init","content":"&lt;/&gt; Permissions.Init( permissionsConfig: ModuleScript? -- The config used for setting up and storing the preset permissions &amp; groups ) → Permissions This method Must be called before using any other functions inside Permissions.  "},{"title":"FindGroup​","type":1,"pageTitle":"Permissions","url":"api/Permissions#FindGroup","content":"&lt;/&gt; Permissions.FindGroup( name: string-- The name of the group to query. ) → Group-- The group that was found or nil if no group was found.   "},{"title":"IsUserInGroup​","type":1,"pageTitle":"Permissions","url":"api/Permissions#IsUserInGroup","content":"&lt;/&gt; Permissions.IsUserInGroup( plr: Player , group: Group ) → boolean This method is for checking if a user is in a specific group returning true if they are otherwise false  "},{"title":"SetUserGroup​","type":1,"pageTitle":"Permissions","url":"api/Permissions#SetUserGroup","content":"&lt;/&gt; Permissions.SetUserGroup( plr: Player , group: Group ) → () This function is used to set a group to a user(player)  "},{"title":"RemoveUserGroup​","type":1,"pageTitle":"Permissions","url":"api/Permissions#RemoveUserGroup","content":"&lt;/&gt; Permissions.RemoveUserGroup( plr: Player , group: Group ) → () This function is used to remove a group from a user(player).  "},{"title":"GrantPermission​","type":1,"pageTitle":"Permissions","url":"api/Permissions#GrantPermission","content":"&lt;/&gt; Permissions.GrantPermission( plr: Player , permission: string ) → () This functions grants a user a permission.  "},{"title":"RevokePermission​","type":1,"pageTitle":"Permissions","url":"api/Permissions#RevokePermission","content":"&lt;/&gt; Permissions.RevokePermission( plr: Player , permission: string ) → () This functions revokes a user from a permission.  "},{"title":"HasPermission​","type":1,"pageTitle":"Permissions","url":"api/Permissions#HasPermission","content":"&lt;/&gt; Permissions.HasPermission( plr: Player , permission: string ) → boolean This function checks if a user has a specific permission node "}]