[{"title":"Permissions","type":0,"sectionRef":"#","url":"api/Permissions","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Permissions","url":"api/Permissions#properties","content":" "},{"title":"Group​","type":1,"pageTitle":"Permissions","url":"api/Permissions#Group","content":"reference &lt;/&gt; Permissions.Group: Schema_Group This property stores a reference to the Group class. "},{"title":"Functions​","type":1,"pageTitle":"Permissions","url":"api/Permissions#functions","content":" "},{"title":"Init​","type":1,"pageTitle":"Permissions","url":"api/Permissions#Init","content":"&lt;/&gt; Permissions.Init( permissionsConfig: Config?-- The config used for setting up and storing the preset permissions &amp; groups ) → Permissions This function initializes Permissions and the preset user permissions &amp; groups. danger Failure to call this function before using other functions will result in Permissions being broken.  "},{"title":"FindGroup​","type":1,"pageTitle":"Permissions","url":"api/Permissions#FindGroup","content":"&lt;/&gt; Permissions.FindGroup( name: string-- The name of the group to query. ) → Group?-- The group that was found or nil if no group was found. This function is used to find a Group object by it's name.  "},{"title":"FindHighestGroupPrecedence​","type":1,"pageTitle":"Permissions","url":"api/Permissions#FindHighestGroupPrecedence","content":"&lt;/&gt; Permissions.FindHighestGroupPrecedence(plr: Player ) → Group? This method is for querying the user groups for the highest precedence returning that group.  "},{"title":"IsUserInGroup​","type":1,"pageTitle":"Permissions","url":"api/Permissions#IsUserInGroup","content":"&lt;/&gt; Permissions.IsUserInGroup( plr: Player , group: Group ) → boolean This method is for checking if a user is in a specific group returning true if they are otherwise false  "},{"title":"SetUserGroup​","type":1,"pageTitle":"Permissions","url":"api/Permissions#SetUserGroup","content":"&lt;/&gt; Permissions.SetUserGroup( plr: Player , group: Group ) → () This function is used to set a group to a user.  "},{"title":"RemoveUserGroup​","type":1,"pageTitle":"Permissions","url":"api/Permissions#RemoveUserGroup","content":"&lt;/&gt; Permissions.RemoveUserGroup( plr: Player , group: Group ) → () This function is used to remove a group from a user.  "},{"title":"GrantPermission​","type":1,"pageTitle":"Permissions","url":"api/Permissions#GrantPermission","content":"&lt;/&gt; Permissions.GrantPermission( plr: Player , permission: string ) → () This functions grants a user a permission node. note If you grant a user a permission node and that user had a negated permission node it will revoke the negated permission.  "},{"title":"RevokePermission​","type":1,"pageTitle":"Permissions","url":"api/Permissions#RevokePermission","content":"&lt;/&gt; Permissions.RevokePermission( plr: Player , permission: string ) → () This functions revokes a user from a permission node.  "},{"title":"HasPermission​","type":1,"pageTitle":"Permissions","url":"api/Permissions#HasPermission","content":"&lt;/&gt; Permissions.HasPermission( plr: Player , permission: string ) → boolean This function checks if a user has a specific permission node. Negated permission nodes take priority, and when present in the user's permissions, this function will return false. "},{"title":"Config","type":0,"sectionRef":"#","url":"api/Config","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Config","url":"api/Config#types","content":" "},{"title":"UserPresetData​","type":1,"pageTitle":"Config","url":"api/Config#UserPresetData","content":"&lt;/&gt; interface UserPresetData { Permissions: {string}-- A array of permission nodes Groups: {string}-- An array of group names to be assigned to the user } The UserPresetData is a table that contains permission nodes and Group names that will be assigned to the user. "},{"title":"Properties​","type":1,"pageTitle":"Config","url":"api/Config#properties","content":" "},{"title":"Groups​","type":1,"pageTitle":"Config","url":"api/Config#Groups","content":"&lt;/&gt; Config.Groups: {Group} This is an array of Group objects that represent all the groups that Permissions should be aware of.  "},{"title":"Users​","type":1,"pageTitle":"Config","url":"api/Config#Users","content":"&lt;/&gt; Config.Users: Dictionary&lt;UserPresetData&gt; A dictionary that which contains Player.UserId as the keys and Permissions.UserPresetData as the values.  "},{"title":"DefaultGroup​","type":1,"pageTitle":"Config","url":"api/Config#DefaultGroup","content":"&lt;/&gt; Config.DefaultGroup: Group The default group is a Group that is automatically assigned to joining users. "},{"title":"Group","type":0,"sectionRef":"#","url":"api/Group","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Group","url":"api/Group#properties","content":" "},{"title":"Name​","type":1,"pageTitle":"Group","url":"api/Group#Name","content":"object-prop &lt;/&gt; Group.Name: string This is a property stores the name of the Group. "},{"title":"Functions​","type":1,"pageTitle":"Group","url":"api/Group#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Group","url":"api/Group#new","content":"&lt;/&gt; Group.new( name: string, permissions: {string}?,-- The permission nodes that the group will contain inheritant: Group?-- The group that will be inherited ) → Group This function creates a new Group object.  "},{"title":"SetInheritant​","type":1,"pageTitle":"Group","url":"api/Group#SetInheritant","content":"chainable &lt;/&gt; Group:SetInheritant( inheritant: Group-- The group that will be inherited ) → Group-- The group object is returned for chaining This method will set this Group._Inheritant to the target Group and will inherit that groups permissions.  "},{"title":"SetPrecedence​","type":1,"pageTitle":"Group","url":"api/Group#SetPrecedence","content":"chainable &lt;/&gt; Group:SetPrecedence(precedence: number) → Group-- The group object is returned for chaining This method will set the Group._Precedence property.  "},{"title":"SetPrefix​","type":1,"pageTitle":"Group","url":"api/Group#SetPrefix","content":"chainable &lt;/&gt; Group:SetPrefix(prefix: string) → Group-- The group object is returned for chaining This method will set the Group._Prefix property.  "},{"title":"GrantPermission​","type":1,"pageTitle":"Group","url":"api/Group#GrantPermission","content":"&lt;/&gt; Group:GrantPermission(permission: string) → () This method grants a permission node to the Group.  "},{"title":"RevokePermission​","type":1,"pageTitle":"Group","url":"api/Group#RevokePermission","content":"&lt;/&gt; Group:RevokePermission(permission: string) → () This method revokes a permission node from the Group.  "},{"title":"HasPermission​","type":1,"pageTitle":"Group","url":"api/Group#HasPermission","content":"&lt;/&gt; Group:HasPermission( permission: string-- The permission node that will be queried ) → boolean This method checks if this Group has a specific permission node. Negated permission nodes take priority, and when present in the Group's permissions, this function will return false. "}]